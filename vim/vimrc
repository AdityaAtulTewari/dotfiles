call plug#begin('~/.vim/plugged')
Plug 'https://github.com/atelierbram/vim-colors_atelier-schemes'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'vim-scripts/taglist.vim'
Plug 'bling/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'airblade/vim-gitgutter'
Plug 'vim-syntastic/syntastic'
Plug 'tpope/vim-fugitive'
Plug 'majutsushi/tagbar'
Plug 'vim-latex/vim-latex'
Plug 'tpope/vim-surround'
Plug 'raimondi/delimitmate'
Plug 'jez/vim-superman'
Plug 'rust-lang/rust.vim'
call plug#end()
au BufRead,BufNewFile *.rs set filetype=rust
"filetype on
filetype on
"Indent Stuff
set foldmethod=syntax
set tabstop=2
set shiftwidth=2
set expandtab
set autoindent
set smarttab

"Number set up
set number
set colorcolumn=160
set tw=159
autocmd BufWritePre * :%s/\s\+$//e
set hlsearch
set scrolloff=5

set ttyfast
set lazyredraw

"Configure NerdTree
let NERDTreeMapActivateNode='<right>'
let NERDTreeShowHidden=1
noremap <F6> :NERDTreeToggle <CR>
autocmd VimEnter * NERDTree
autocmd VimEnter * wincmd p
syntax on
filetype indent off
filetype plugin on

" Switch windows with CTRL-hjkl
noremap <C-J> <C-W><C-J>
noremap <C-K> <C-W><C-K>
noremap <C-L> <C-W><C-L>
noremap <C-H> <C-W><C-H>

" Close all windows with ZZ
nmap ZZ :xa<CR>

" Switch tabs with F5 and F6
inoremap <F5> <ESC>:tabp<CR>i<right>
inoremap <F6> <ESC>:tabn<CR>i<right>
nnoremap <F5> :tabp<CR>
nnoremap <F6> :tabn<CR>

" Use CTRL-T as a shortcut for make
nnoremap <C-T> :make<CR>

" Get rid of highlighting after stuff
nnoremap <CR> :noh<CR><CR>

set showmatch  " Highlight matching braces

colorscheme Atelier_HeathDark
set cursorline " Highlight current line
:hi CursorLine cterm=underline ctermbg=none ctermfg=none
set nostartofline " Vertical movement preserves horizontal position
:imap jj <Esc>
:imap kk <Esc>
:imap hh <Esc>
:imap lll <Esc>

"Add mouse settings
if has('mouse')
  set mouse=a
endif

" -----------------------------Plugins--------------------------------------
" airline
set laststatus=2 " Always show airline
let g:airline_powerline_fonts = 1 " Use fancy arrow font
let g:airline_detect_paste=1 " Show PASTE if in paste mode
let g:airline#extensions#tabline#enabled = 1 " Show airline for tabs too
let g:airline#extensions#branch#enabled = 1

" NERDtree
" Open/close NERDTree Tabs with \t
nmap <silent> <leader>t :NERDTreeTabsToggle<CR>
" To have NERDTree always open on startup
let g:nerdtree_tabs_open_on_console_startup = 1

" vim-gitgutter
let g:airline#extensions#hunks#non_zero_only = 1 " In vim-airline, only display 'hunks' if the diff is non-zero
let g:gitgutter_enabled = 1

" javac for Syntastic
let g:syntastic_java_checkers = ['javac']
let g:syntastic_java_javac_config_file_enabled = 1

" C++17 for Syntastic
let g:syntastic_cpp_compiler_options = "-std=c++17"

" Rust for Syntastic
let g:syntastic_rust_checkers = ['rustc']
let g:rust_recommended_style = 0

" Syntactic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_error_symbol = '✘'
let g:syntastic_warning_symbol = "▲"
augroup mySyntastic
  au!
  au FileType tex let b:syntastic_mode = "passive"
  au FileType tex let b:delimitMate_matchpairs = "(:),[:],{:},`:'""'`"
augroup END

" Tagbar
nmap <F8> :TagbarToggle<CR>
